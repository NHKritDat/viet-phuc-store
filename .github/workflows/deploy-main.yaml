name: Deploy backend

on:
  push:
    branches:
      - main

env:
  ACCESS_TOKEN_EXP: ${{ vars.ACCESS_TOKEN_EXP }}
  REFRESH_TOKEN_EXP: ${{ vars.REFRESH_TOKEN_EXP }}
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
  DB_URL: ${{ secrets.DB_URL }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
  MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
  ISSUER: ${{ secrets.ISSUER }}
  AUDIENCE: ${{ secrets.AUDIENCE }}
  RESET_PASSWORD_URL: ${{ vars.RESET_PASSWORD_URL }}
  VERIFY_EMAIL_URL: ${{ vars.VERIFY_EMAIL_URL }}
  VIETTEL_API_GET_LIST_PROVINCES: ${{ vars.VIETTEL_API_GET_LIST_PROVINCES }}
  VIETTEL_API_GET_LIST_DISTRICTS: ${{ vars.VIETTEL_API_GET_LIST_DISTRICTS }}
  VIETTEL_API_SIGN_PARTNER: ${{ vars.VIETTEL_API_SIGN_PARTNER }}
  VIETTEL_PARTNER_USERNAME: ${{ secrets.VIETTEL_PARTNER_USERNAME }}
  VIETTEL_PARTNER_PASSWORD: ${{ secrets.VIETTEL_PARTNER_PASSWORD }}
  VIETTEL_API_GET_PRICING: ${{ vars.VIETTEL_API_GET_PRICING }}
  VIETTEL_PRICING_ORDER_SERVICE: ${{ vars.VIETTEL_PRICING_ORDER_SERVICE }}
  VIETTEL_PRICING_SENDER_PROVINCE: ${{ vars.VIETTEL_PRICING_SENDER_PROVINCE }}
  VIETTEL_PRICING_SENDER_DISTRICT: ${{ vars.VIETTEL_PRICING_SENDER_DISTRICT }}
  VIETTEL_PRICING_PRODUCT_TYPE: ${{ vars.VIETTEL_PRICING_PRODUCT_TYPE }}
  VIETTEL_PRICING_NATIONAL_TYPE: ${{ vars.VIETTEL_PRICING_NATIONAL_TYPE }}

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile Project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set executable permission for mvnw
        run: chmod +x mvnw

      - name: Compile project
        run: ./mvnw clean compile

  test:
    runs-on: ubuntu-latest
    name: Run Unit Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set executable permission for mvnw
        run: chmod +x mvnw

      - name: Run unit tests
        run: ./mvnw clean test

  package:
    needs:
      - compile
      - test
    runs-on: ubuntu-latest
    name: Package Project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set executable permission for mvnw
        run: chmod +x mvnw

      - name: Package project
        run: ./mvnw clean package -DskipTests

  build-image:
    needs:
      - package
    runs-on: ubuntu-latest
    name: Build Docker and Push Image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
            java-version: '17'
            distribution: 'temurin'

      - name: Extract version
        id: extract_version
        run: echo "VERSION=$(./mvnw -q help:evaluate -Dexpression='project.version' -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/dap-viet-be:${{ steps.extract_version.outputs.VERSION }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/dap-viet-be:latest
          build-args: |
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}